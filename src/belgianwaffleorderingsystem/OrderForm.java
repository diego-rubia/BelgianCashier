/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package belgianwaffleorderingsystem;
import javax.swing.*; // used for notifications
import java.util.*;
import java.io.*;
/**
 *
 * @author ddieg
 */


public class OrderForm extends javax.swing.JFrame {

    // Creates object of the Belgian Waffle Class
    BelgianWaffle bw = new BelgianWaffle ();
    static ArrayList<String> waffleList;
    
    /**
     * Creates new form OrderForm
     */
    public OrderForm() {
        initComponents();
        waffleList = new ArrayList<String> ();
        
    }
    
    public static void generateMenu ()
    {
        try
        {
            FileInputStream file = new FileInputStream ("Menu.dat");
            ObjectInputStream inFile = new ObjectInputStream (file);
            boolean eof = false;
            
            while (!eof) // read the menu from the file
            {
                try
                {
                    waffleList.add((String)inFile.readObject());
                }
                
                catch (EOFException ef)
                {
                    eof = true;
                }
                
                catch (Exception ex)
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        }
        
        catch (IOException e) // 
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        waffleType = new javax.swing.JComboBox<>();
        coffeeType = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        prevOrderWindow = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        waffleQuantity = new javax.swing.JTextField();
        coffeeQuantity = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Belgian Waffle Ordering System");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Belgian Waffle Ordering System");

        jLabel2.setText("Waffle Order:");

        jLabel3.setText("Coffee Order:");

        waffleType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PLA (Plain) - PHP 35", "CHO (Chocolate) - PHP 40", "CHE (Cheddar Cheese) - PHP 40", "PBU  (Peanut Butter) - PHP 40", "CAR (Caramel) - PHP 40", "STR (Strawberry) - PHP 45", "BLU (Blueberry) - PHP 45", "CUS (Custard) - PHP 45", "MPE (Mango Peach) - PHP 45", "MFB (Maple and French Butter) - PHP 45", "BCH (Banana Chocolate) - PHP 50", "BCR (Banana Caramel) - PHP 50", "BPB (Banana Peanut Butter) - PHP 50", "CCU (Chocolate Custard) - PHP 55", "CCR (Cookies and Cream) - PHP 55", "BBB (Blueberry Banana) - PHP 55", "SBB (Strawberry Banana) - PHP 55", "SBC (Strawberry Custard) - PHP 55", "CHH (Chocolate Hazelnut) - PHP 65", "CHC (Chocolate Creamcheese) - PHP 65", "BBC (Blueberry Banana Custard) - PHP 65", " ", " " }));
        waffleType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waffleTypeActionPerformed(evt);
            }
        });

        coffeeType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OCF (Original Coffee) - PHP 45", "SCF (Strong Coffee) - PHP 45", "CCF (Chocolate Coffee) - PHP 45" }));

        jButton1.setLabel("Clear Orders");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Finalize Orders");
        jButton2.setVerifyInputWhenFocusTarget(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        prevOrderWindow.setColumns(20);
        prevOrderWindow.setRows(5);
        jScrollPane1.setViewportView(prevOrderWindow);

        jLabel4.setText("Order Preview Window");

        jLabel5.setText("Waffle Quantity:");

        jLabel6.setText("Coffee Quantity:");

        jButton3.setText("Add Orders");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        waffleQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waffleQuantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(252, 252, 252)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jScrollPane1)
                                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addComponent(waffleType, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(waffleQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(coffeeType, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(coffeeQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(153, 153, 153))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waffleType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coffeeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(waffleQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(coffeeQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Method for Add Orders button
        int qWaffle, qCoffee;
        // get the values for the quantities
        if (coffeeQuantity.getText().isEmpty() && waffleQuantity.getText().isEmpty())
        {
            /* gives error message when both waffle quantity and coffee quantity
               are empty*/
            JOptionPane.showMessageDialog(null, "Please supply the quantity of coffee and/or waffles");
        }
        
        if (!waffleQuantity.getText().isEmpty() && 
            Integer.parseInt(waffleQuantity.getText().trim()) > 0)
        {
           // get waffle order if quantity is specified and greater than zero
           qWaffle = Integer.parseInt(waffleQuantity.getText().trim());
           bw.setWaffleQuantOrder(qWaffle);
           String wTemp = waffleType.getSelectedItem().toString();
           String wCharCode = wTemp.substring(0,3);
           bw.setWaffleOrder(wCharCode);
           String wOrderTemp = wCharCode + " = " + Integer.toString(qWaffle);         
        }
        
        
        if (!coffeeQuantity.getText().isEmpty() &&
            Integer.parseInt(coffeeQuantity.getText().trim()) > 0)
        {
            // get coffee order if quantity is specified and greater than zero
            qCoffee = Integer.parseInt(coffeeQuantity.getText().trim());
            bw.setCoffeeQuantOrder(qCoffee);
            String cTemp = coffeeType.getSelectedItem().toString();
            String cCharCode = cTemp.substring(0,3);
            bw.setCoffeeOrder(cCharCode);
            String cOrderTemp = cCharCode + " = " + Integer.toString(qCoffee);
        }
        
        // Order notification
        if (!coffeeQuantity.getText().isEmpty() || !waffleQuantity.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Orders added");
        }  
    }//GEN-LAST:event_jButton3ActionPerformed

    
    private void waffleQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waffleQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waffleQuantityActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Code for finalize orders here
        String wTemp = bw.getWaffleOrders();
        String [] finWaffle = wTemp.split(",");
        String wTempNum = bw.getWaffleQuant();
        String [] wQuantity = wTempNum.split(",");
        prevOrderWindow.append("Waffle:\n");
        
        if (finWaffle.length != 0)
        {
            for (int i = 0; i < finWaffle.length; i++)
            {
                int orderPriceWaff = Integer.parseInt(wQuantity[i])*bw.getPrice(finWaffle[i]);
                prevOrderWindow.append(finWaffle[i] + "\tPHP " + orderPriceWaff + "\n"); 
            }            
        }
        
        else // no waffle orders
        {
            prevOrderWindow.append("Empty\n");
        }
        
        String cTemp = bw.getCoffeeOrders();
        String [] finCoffee = cTemp.split(",");
        String cTempNum = bw.getCoffeeQuant();
        String [] cQuantity = cTempNum.split(",");
        prevOrderWindow.append("\nCoffee:\n");
        if (finCoffee.length != 0)
        {
            for (int j = 0; j < finCoffee.length; j++)
            {
                int orderPriceCoff = Integer.parseInt(cQuantity[j])*bw.getPrice(finCoffee[j]);
                prevOrderWindow.append(finCoffee[j] + "\t PHP"  + orderPriceCoff + "\n"); 
            }
        }
        
        else // no coffee orders
        {
            prevOrderWindow.append("Empty\n");
        }
        
        // compute total cost
        int totCost = bw.getTotalPrice();
        prevOrderWindow.append ("\nTotal cost: \t PHP " + totCost);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void waffleTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waffleTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waffleTypeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Code to clear orders
        bw.clearOrders(); // empties contents of array list in BelgianWaffle class
        prevOrderWindow.setText(""); // sets JTextArea to blank
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField coffeeQuantity;
    private javax.swing.JComboBox<String> coffeeType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea prevOrderWindow;
    private javax.swing.JTextField waffleQuantity;
    private javax.swing.JComboBox<String> waffleType;
    // End of variables declaration//GEN-END:variables
}
