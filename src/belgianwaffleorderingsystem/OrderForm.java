/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package belgianwaffleorderingsystem;
import javax.swing.*; // used for notifications
import java.util.*;
import java.io.*;
/**
 *
 * @author ddieg
 */


public class OrderForm extends javax.swing.JFrame {

    // Creates object of the Belgian Waffle Class
    BelgianWaffle bw = new BelgianWaffle ();
    BelgianDatabaseHandler mbdb;
    String menuDbName = "menu.db";
    String dbpath = "./src/db/";
    private ArrayList<Product> mWaffleList;
    private ArrayList<Product> mCoffeeList;
    /**
     * Creates new form OrderForm
     */
    public OrderForm() {
        initComponents();
        mWaffleList = new ArrayList<Product>();
        mCoffeeList = new ArrayList<Product>();
        mbdb = new BelgianDatabaseHandler(dbpath+menuDbName);
        resetQuantityBox();
        generateMenu();
    }
    public void resetQuantityBox(){
        waffleQuantity.setText("0");
        coffeeQuantity.setText("0");
    }
    //generates Menu in Both Coffee and Waffle Combobox
    public void generateMenu () 
    {
       ArrayList<Product> mCoffeeList = mbdb.getCoffeeMenu();
       for(int i =0;i<mCoffeeList.size();i++){
        coffeeTypeCombo.addItem(mCoffeeList.get(i).toString());
       }
       ArrayList<Product> mWaffleList = mbdb.getWaffleMenu();
       for(int j =0;j<mWaffleList.size();j++){
        waffleTypeCombo.addItem(mWaffleList.get(j).toString());
       }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        waffleTypeCombo = new javax.swing.JComboBox<>();
        coffeeTypeCombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        prevOrderWindow = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addOrderBtn = new javax.swing.JButton();
        waffleQuantity = new javax.swing.JTextField();
        coffeeQuantity = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderListBox = new javax.swing.JList<>();
        plusWaffleBtn = new javax.swing.JToggleButton();
        minusWaffleBtn = new javax.swing.JToggleButton();
        minusCoffeeBtn = new javax.swing.JToggleButton();
        plusCoffeeBtn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Belgian Waffle Ordering System");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Belgian Waffle Ordering System");

        jLabel2.setText("Waffle Order:");

        jLabel3.setText("Coffee Order:");

        waffleTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waffleTypeComboActionPerformed(evt);
            }
        });

        jButton1.setLabel("Clear Orders");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Finalize Orders");
        jButton2.setVerifyInputWhenFocusTarget(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        prevOrderWindow.setColumns(20);
        prevOrderWindow.setRows(5);
        jScrollPane1.setViewportView(prevOrderWindow);

        jLabel4.setText("Order Preview Window");

        jLabel5.setText("Waffle Quantity:");

        jLabel6.setText("Coffee Quantity:");

        addOrderBtn.setText("Add Orders");
        addOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderBtnActionPerformed(evt);
            }
        });

        waffleQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waffleQuantityActionPerformed(evt);
            }
        });

        orderListBox.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(orderListBox);

        plusWaffleBtn.setText("+");
        plusWaffleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusWaffleBtnActionPerformed(evt);
            }
        });

        minusWaffleBtn.setText("-");
        minusWaffleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusWaffleBtnActionPerformed(evt);
            }
        });

        minusCoffeeBtn.setText("-");
        minusCoffeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusCoffeeBtnActionPerformed(evt);
            }
        });

        plusCoffeeBtn.setText("+");
        plusCoffeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusCoffeeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(addOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(26, 26, 26)
                                                .addComponent(minusCoffeeBtn))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(minusWaffleBtn)))
                                        .addGap(4, 4, 4)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(coffeeQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(waffleQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(plusWaffleBtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(plusCoffeeBtn)))
                                .addGap(205, 205, 205)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(coffeeTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(waffleTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 14, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waffleTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coffeeTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(waffleQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plusWaffleBtn)
                            .addComponent(minusWaffleBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(coffeeQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minusCoffeeBtn)
                            .addComponent(plusCoffeeBtn))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderBtnActionPerformed
        // Method for Add Orders button
        int qWaffle, qCoffee;
        // get the values for the quantities
        if (coffeeQuantity.getText().isEmpty() && waffleQuantity.getText().isEmpty())
        {
            /* gives error message when both waffle quantity and coffee quantity
               are empty*/
            JOptionPane.showMessageDialog(null, "Please supply the quantity of coffee and/or waffles");
        }
        
        if (!waffleQuantity.getText().isEmpty() && 
            Integer.parseInt(waffleQuantity.getText().trim()) > 0)
        {
           // get waffle order if quantity is specified and greater than zero
           qWaffle = Integer.parseInt(waffleQuantity.getText().trim());
           bw.setWaffleQuantOrder(qWaffle);
           String wTemp = waffleTypeCombo.getSelectedItem().toString();
           String wCharCode = wTemp.substring(0,3);
           bw.setWaffleOrder(wCharCode);
           String wOrderTemp = wCharCode + " = " + Integer.toString(qWaffle);         
        }
        
        
        if (!coffeeQuantity.getText().isEmpty() &&
            Integer.parseInt(coffeeQuantity.getText().trim()) > 0)
        {
            // get coffee order if quantity is specified and greater than zero
            qCoffee = Integer.parseInt(coffeeQuantity.getText().trim());
            bw.setCoffeeQuantOrder(qCoffee);
            String cTemp = coffeeTypeCombo.getSelectedItem().toString();
            String cCharCode = cTemp.substring(0,3);
            bw.setCoffeeOrder(cCharCode);
            String cOrderTemp = cCharCode + " = " + Integer.toString(qCoffee);
        }
        
        // Order notification
        if (!coffeeQuantity.getText().isEmpty() || !waffleQuantity.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Orders added");
        }  
    }//GEN-LAST:event_addOrderBtnActionPerformed

    
    private void waffleQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waffleQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waffleQuantityActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Code for finalize orders here
        String wTemp = bw.getWaffleOrders();
        String [] finWaffle = wTemp.split(",");
        String wTempNum = bw.getWaffleQuant();
        String [] wQuantity = wTempNum.split(",");
        prevOrderWindow.append("Waffle:\n");
        
        if (finWaffle.length != 0)
        {
            for (int i = 0; i < finWaffle.length; i++)
            {
                int orderPriceWaff = Integer.parseInt(wQuantity[i])*bw.getPrice(finWaffle[i]);
                prevOrderWindow.append(finWaffle[i] + "\tPHP " + orderPriceWaff + "\n"); 
            }            
        }
        
        else // no waffle orders
        {
            prevOrderWindow.append("Empty\n");
        }
        
        String cTemp = bw.getCoffeeOrders();
        String [] finCoffee = cTemp.split(",");
        String cTempNum = bw.getCoffeeQuant();
        String [] cQuantity = cTempNum.split(",");
        prevOrderWindow.append("\nCoffee:\n");
        if (finCoffee.length != 0)
        {
            for (int j = 0; j < finCoffee.length; j++)
            {
                int orderPriceCoff = Integer.parseInt(cQuantity[j])*bw.getPrice(finCoffee[j]);
                prevOrderWindow.append(finCoffee[j] + "\t PHP"  + orderPriceCoff + "\n"); 
            }
        }
        
        else // no coffee orders
        {
            prevOrderWindow.append("Empty\n");
        }
        
        // compute total cost
        int totCost = bw.getTotalPrice();
        prevOrderWindow.append ("\nTotal cost: \t PHP " + totCost);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void waffleTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waffleTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waffleTypeComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Code to clear orders
        bw.clearOrders(); // empties contents of array list in BelgianWaffle class
        prevOrderWindow.setText(""); // sets JTextArea to blank
    }//GEN-LAST:event_jButton1ActionPerformed

    private void minusCoffeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusCoffeeBtnActionPerformed
        // TODO add your handling code here:
        int tempCoffeeQuantity = Integer.parseInt(coffeeQuantity.getText());
        if(tempCoffeeQuantity!=0)
            tempCoffeeQuantity--;
        coffeeQuantity.setText(Integer.toString(tempCoffeeQuantity));
    }//GEN-LAST:event_minusCoffeeBtnActionPerformed

    private void plusWaffleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusWaffleBtnActionPerformed
        // TODO add your handling code here:
        int tempWaffleQuantity = Integer.parseInt(waffleQuantity.getText());
        tempWaffleQuantity++;
        waffleQuantity.setText(Integer.toString(tempWaffleQuantity));
    }//GEN-LAST:event_plusWaffleBtnActionPerformed

    private void minusWaffleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusWaffleBtnActionPerformed
        // TODO add your handling code here:
        int tempWaffleQuantity = Integer.parseInt(waffleQuantity.getText());
        if(tempWaffleQuantity!=0)
            tempWaffleQuantity--;
        waffleQuantity.setText(Integer.toString(tempWaffleQuantity));
    }//GEN-LAST:event_minusWaffleBtnActionPerformed

    private void plusCoffeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusCoffeeBtnActionPerformed
        // TODO add your handling code here:
        int tempCoffeeQuantity = Integer.parseInt(coffeeQuantity.getText());
        tempCoffeeQuantity++;
        coffeeQuantity.setText(Integer.toString(tempCoffeeQuantity));
    }//GEN-LAST:event_plusCoffeeBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderForm().setVisible(true);
                

                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addOrderBtn;
    private javax.swing.JTextField coffeeQuantity;
    private javax.swing.JComboBox<String> coffeeTypeCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton minusCoffeeBtn;
    private javax.swing.JToggleButton minusWaffleBtn;
    private javax.swing.JList<String> orderListBox;
    private javax.swing.JToggleButton plusCoffeeBtn;
    private javax.swing.JToggleButton plusWaffleBtn;
    private javax.swing.JTextArea prevOrderWindow;
    private javax.swing.JTextField waffleQuantity;
    private javax.swing.JComboBox<String> waffleTypeCombo;
    // End of variables declaration//GEN-END:variables
}
